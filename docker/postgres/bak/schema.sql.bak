-- Database generated with pgModeler (PostgreSQL Database Modeler).
-- pgModeler  version: 0.8.1
-- PostgreSQL version: 9.4
-- Project Site: pgmodeler.com.br
-- Model Author: ---


-- Database creation must be done outside an multicommand file.
-- These commands were put in this file only for convenience.
-- -- object: new_database | type: DATABASE --
-- -- DROP DATABASE IF EXISTS new_database;
-- CREATE DATABASE new_database
-- ;
-- -- ddl-end --
-- 

-- object: public."USERS" | type: TABLE --
-- DROP TABLE IF EXISTS public."USERS" CASCADE;
CREATE TABLE public."USERS"(
	"ID" serial NOT NULL,
	"STATUS" integer NOT NULL,
	"IDENTIFICATION" varchar(20) NOT NULL,
	"IDENTIFICATION_TYPE_ID" integer NOT NULL,
	"EMAIL" varchar(254) NOT NULL,
	"EMAIL_CONFIRMED" boolean NOT NULL,
	"USERNAME" varchar(30) NOT NULL,
	"PASSWORD" varchar(255) NOT NULL,
	"PASSWORD_UPDATED_AT" timestamp with time zone,
	"GENDER_ID" integer NOT NULL,
	"FIRST_NAME" varchar(50),
	"LAST_NAME" varchar(50),
	"PHONE" varchar(15),
	"ADDRESS" varchar(255),
	"CREATED_AT" timestamp with time zone NOT NULL,
	"UPDATED_AT" timestamp with time zone,
	"LOGIN_FAILED_ATTEMPTS" integer NOT NULL DEFAULT 0,
	"LAST_LOGIN_DATE" timestamp with time zone,
	"LAST_LOGIN_IP" varchar(45),
	CONSTRAINT "USERS_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."USERS" OWNER TO postgres;
-- ddl-end --

-- object: public."IDENTIFICATION_TYPES" | type: TABLE --
-- DROP TABLE IF EXISTS public."IDENTIFICATION_TYPES" CASCADE;
CREATE TABLE public."IDENTIFICATION_TYPES"(
	"ID" serial NOT NULL,
	"NAME" varchar(50) NOT NULL,
	"ABBREVIATION" varchar(5) NOT NULL,
	"DESCRIPTION" varchar(255),
	CONSTRAINT "IDENTIFICATION_TYPES_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."IDENTIFICATION_TYPES" OWNER TO postgres;
-- ddl-end --

-- object: public."GENDERS" | type: TABLE --
-- DROP TABLE IF EXISTS public."GENDERS" CASCADE;
CREATE TABLE public."GENDERS"(
	"ID" serial NOT NULL,
	"NAME" varchar(20) NOT NULL,
	"DESCRIPTION" varchar(255),
	CONSTRAINT "GENDERS_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."GENDERS" OWNER TO postgres;
-- ddl-end --

-- object: public."PASSWORD_RECORDS" | type: TABLE --
-- DROP TABLE IF EXISTS public."PASSWORD_RECORDS" CASCADE;
CREATE TABLE public."PASSWORD_RECORDS"(
	"ID" serial NOT NULL,
	"USER_ID" integer NOT NULL,
	"PASSWORD" varchar(255) NOT NULL,
	"PASSWORD_UPDATED_AT" timestamp with time zone NOT NULL,
	CONSTRAINT "PASSWORD_RECORDS_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."PASSWORD_RECORDS" OWNER TO postgres;
-- ddl-end --

-- object: public."ROLES" | type: TABLE --
-- DROP TABLE IF EXISTS public."ROLES" CASCADE;
CREATE TABLE public."ROLES"(
	"ID" serial NOT NULL,
	"NAME" varchar(20) NOT NULL,
	"IP_FILTER" boolean NOT NULL DEFAULT false,
	CONSTRAINT "ROLES_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."ROLES" OWNER TO postgres;
-- ddl-end --

-- object: public."RESOURCES" | type: TABLE --
-- DROP TABLE IF EXISTS public."RESOURCES" CASCADE;
CREATE TABLE public."RESOURCES"(
	"ID" serial NOT NULL,
	"NAME" varchar(20) NOT NULL,
	"DESCRIPTION" varchar(255),
	CONSTRAINT "RESOURCES_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."RESOURCES" OWNER TO postgres;
-- ddl-end --

-- object: public."ACTIONS" | type: TABLE --
-- DROP TABLE IF EXISTS public."ACTIONS" CASCADE;
CREATE TABLE public."ACTIONS"(
	"ID" serial NOT NULL,
	"NAME" varchar(20) NOT NULL,
	"DESCRIPTION" varchar(255),
	CONSTRAINT "ACTIONS_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."ACTIONS" OWNER TO postgres;
-- ddl-end --

-- object: public."PERMISSIONS" | type: TABLE --
-- DROP TABLE IF EXISTS public."PERMISSIONS" CASCADE;
CREATE TABLE public."PERMISSIONS"(
	"ID" serial NOT NULL,
	"ACTION_ID" integer NOT NULL,
	"RESOURCE_ID" integer NOT NULL,
	CONSTRAINT "PERMISSIONS_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."PERMISSIONS" OWNER TO postgres;
-- ddl-end --

-- object: public."ROLES_PERMISSIONS" | type: TABLE --
-- DROP TABLE IF EXISTS public."ROLES_PERMISSIONS" CASCADE;
CREATE TABLE public."ROLES_PERMISSIONS"(
	"ID" serial NOT NULL,
	"ROLE_ID" integer NOT NULL,
	"PERMISSION_ID" integer NOT NULL,
	CONSTRAINT "ROLES_PERMISSIONS_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."ROLES_PERMISSIONS" OWNER TO postgres;
-- ddl-end --

-- object: public."ROLES_IPS" | type: TABLE --
-- DROP TABLE IF EXISTS public."ROLES_IPS" CASCADE;
CREATE TABLE public."ROLES_IPS"(
	"ID" serial NOT NULL,
	"ROLE_ID" integer NOT NULL,
	"IP" varchar(45) NOT NULL,
	CONSTRAINT "ROLES_IPS_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."ROLES_IPS" OWNER TO postgres;
-- ddl-end --

-- object: public."USERS_ROLES" | type: TABLE --
-- DROP TABLE IF EXISTS public."USERS_ROLES" CASCADE;
CREATE TABLE public."USERS_ROLES"(
	"ID" serial NOT NULL,
	"USER_ID" integer NOT NULL,
	"ROLE_ID" integer NOT NULL,
	CONSTRAINT "USERS_ROLES_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."USERS_ROLES" OWNER TO postgres;
-- ddl-end --

-- object: public."ROLES_ROLES" | type: TABLE --
-- DROP TABLE IF EXISTS public."ROLES_ROLES" CASCADE;
CREATE TABLE public."ROLES_ROLES"(
	"ID" serial NOT NULL,
	"PARENT_ROLE_ID" integer NOT NULL,
	"CHILD_ROLE_ID" integer NOT NULL,
	CONSTRAINT "ROLES_ROLES_PK" PRIMARY KEY ("ID")

);
-- ddl-end --
ALTER TABLE public."ROLES_ROLES" OWNER TO postgres;
-- ddl-end --

-- object: "USERS_STATUS_IDX" | type: INDEX --
-- DROP INDEX IF EXISTS public."USERS_STATUS_IDX" CASCADE;
CREATE INDEX "USERS_STATUS_IDX" ON public."USERS"
	USING btree
	(
	  "STATUS" ASC NULLS LAST
	);
-- ddl-end --

-- object: "USERS_IDENTIFICATION_IDX" | type: INDEX --
-- DROP INDEX IF EXISTS public."USERS_IDENTIFICATION_IDX" CASCADE;
CREATE UNIQUE INDEX "USERS_IDENTIFICATION_IDX" ON public."USERS"
	USING btree
	(
	  "IDENTIFICATION" ASC NULLS LAST
	);
-- ddl-end --

-- object: "USERS_EMAIL_IDX" | type: INDEX --
-- DROP INDEX IF EXISTS public."USERS_EMAIL_IDX" CASCADE;
CREATE UNIQUE INDEX "USERS_EMAIL_IDX" ON public."USERS"
	USING btree
	(
	  "EMAIL" ASC NULLS LAST
	);
-- ddl-end --

-- object: "USERS_USERNAME_IDX" | type: INDEX --
-- DROP INDEX IF EXISTS public."USERS_USERNAME_IDX" CASCADE;
CREATE UNIQUE INDEX "USERS_USERNAME_IDX" ON public."USERS"
	USING btree
	(
	  "USERNAME" ASC NULLS LAST
	);
-- ddl-end --

-- object: "USERS_IDENTIFICATION_TYPE_FK" | type: CONSTRAINT --
-- ALTER TABLE public."USERS" DROP CONSTRAINT IF EXISTS "USERS_IDENTIFICATION_TYPE_FK" CASCADE;
ALTER TABLE public."USERS" ADD CONSTRAINT "USERS_IDENTIFICATION_TYPE_FK" FOREIGN KEY ("IDENTIFICATION_TYPE_ID")
REFERENCES public."IDENTIFICATION_TYPES" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "USERS_GENDER_FK" | type: CONSTRAINT --
-- ALTER TABLE public."USERS" DROP CONSTRAINT IF EXISTS "USERS_GENDER_FK" CASCADE;
ALTER TABLE public."USERS" ADD CONSTRAINT "USERS_GENDER_FK" FOREIGN KEY ("GENDER_ID")
REFERENCES public."GENDERS" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "PASSWORD_RECORDS_USER_ID_FK" | type: CONSTRAINT --
-- ALTER TABLE public."PASSWORD_RECORDS" DROP CONSTRAINT IF EXISTS "PASSWORD_RECORDS_USER_ID_FK" CASCADE;
ALTER TABLE public."PASSWORD_RECORDS" ADD CONSTRAINT "PASSWORD_RECORDS_USER_ID_FK" FOREIGN KEY ("USER_ID")
REFERENCES public."USERS" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "PERMISSIONS_RESOURCE_ID_FK" | type: CONSTRAINT --
-- ALTER TABLE public."PERMISSIONS" DROP CONSTRAINT IF EXISTS "PERMISSIONS_RESOURCE_ID_FK" CASCADE;
ALTER TABLE public."PERMISSIONS" ADD CONSTRAINT "PERMISSIONS_RESOURCE_ID_FK" FOREIGN KEY ("RESOURCE_ID")
REFERENCES public."RESOURCES" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "PERMISSIONS_ACTION_ID_FK" | type: CONSTRAINT --
-- ALTER TABLE public."PERMISSIONS" DROP CONSTRAINT IF EXISTS "PERMISSIONS_ACTION_ID_FK" CASCADE;
ALTER TABLE public."PERMISSIONS" ADD CONSTRAINT "PERMISSIONS_ACTION_ID_FK" FOREIGN KEY ("ACTION_ID")
REFERENCES public."ACTIONS" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "ROLES_PERMISSIONS_ROLE_ID_FK" | type: CONSTRAINT --
-- ALTER TABLE public."ROLES_PERMISSIONS" DROP CONSTRAINT IF EXISTS "ROLES_PERMISSIONS_ROLE_ID_FK" CASCADE;
ALTER TABLE public."ROLES_PERMISSIONS" ADD CONSTRAINT "ROLES_PERMISSIONS_ROLE_ID_FK" FOREIGN KEY ("ROLE_ID")
REFERENCES public."ROLES" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "ROLES_PERMISSIONS_PERMISSION_ID_FK" | type: CONSTRAINT --
-- ALTER TABLE public."ROLES_PERMISSIONS" DROP CONSTRAINT IF EXISTS "ROLES_PERMISSIONS_PERMISSION_ID_FK" CASCADE;
ALTER TABLE public."ROLES_PERMISSIONS" ADD CONSTRAINT "ROLES_PERMISSIONS_PERMISSION_ID_FK" FOREIGN KEY ("PERMISSION_ID")
REFERENCES public."PERMISSIONS" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "ROLES_IPS_ROLE_ID_FK" | type: CONSTRAINT --
-- ALTER TABLE public."ROLES_IPS" DROP CONSTRAINT IF EXISTS "ROLES_IPS_ROLE_ID_FK" CASCADE;
ALTER TABLE public."ROLES_IPS" ADD CONSTRAINT "ROLES_IPS_ROLE_ID_FK" FOREIGN KEY ("ROLE_ID")
REFERENCES public."ROLES" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "USERS_ROLES_USER_ID_FK" | type: CONSTRAINT --
-- ALTER TABLE public."USERS_ROLES" DROP CONSTRAINT IF EXISTS "USERS_ROLES_USER_ID_FK" CASCADE;
ALTER TABLE public."USERS_ROLES" ADD CONSTRAINT "USERS_ROLES_USER_ID_FK" FOREIGN KEY ("USER_ID")
REFERENCES public."USERS" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "USERS_ROLES_ROLE_ID_FK" | type: CONSTRAINT --
-- ALTER TABLE public."USERS_ROLES" DROP CONSTRAINT IF EXISTS "USERS_ROLES_ROLE_ID_FK" CASCADE;
ALTER TABLE public."USERS_ROLES" ADD CONSTRAINT "USERS_ROLES_ROLE_ID_FK" FOREIGN KEY ("ROLE_ID")
REFERENCES public."ROLES" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "ROLES_ROLES_PARENT_ROLE_FK" | type: CONSTRAINT --
-- ALTER TABLE public."ROLES_ROLES" DROP CONSTRAINT IF EXISTS "ROLES_ROLES_PARENT_ROLE_FK" CASCADE;
ALTER TABLE public."ROLES_ROLES" ADD CONSTRAINT "ROLES_ROLES_PARENT_ROLE_FK" FOREIGN KEY ("PARENT_ROLE_ID")
REFERENCES public."ROLES" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: "ROLES_ROLES_CHILD_ROLE_FK" | type: CONSTRAINT --
-- ALTER TABLE public."ROLES_ROLES" DROP CONSTRAINT IF EXISTS "ROLES_ROLES_CHILD_ROLE_FK" CASCADE;
ALTER TABLE public."ROLES_ROLES" ADD CONSTRAINT "ROLES_ROLES_CHILD_ROLE_FK" FOREIGN KEY ("CHILD_ROLE_ID")
REFERENCES public."ROLES" ("ID") MATCH FULL
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --


